# –ú–æ–¥—É–ª—å –¥–ª—è Hikka
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã .reply –∏ .answer

@loader.tds
class ReplyAnswerModule(loader.Module):
    """Create quotes"""

    strings = {
        "name": "ReplyAnswerModule",
        "where_text": "<emoji document_id='6041914500272098262'>üö´</emoji> <b>Provide a text to create sticker with</b>",
        "processing": (
            "<emoji document_id='6318766236746384900'>üïî</emoji> <b>Processing...</b>"
        ),
    }

class ReplyAnswerModule:
    def __init__(self):
        self.replies = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤

    def handle_message(self, message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.startswith(".reply "):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã .reply
            _, reply_text = message.split(" ", 1)
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ
            self.replies[message.chat_id] = reply_text
            return "–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω –¥–ª—è –æ—Ç–≤–µ—Ç–∞!"
        elif message == ".answer":
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            if message.chat_id in self.replies:
                return self.replies[message.chat_id]
            else:
                return "–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ –∑–∞–¥–∞–Ω."
        else:
            return None  # –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è
reply_answer_module = ReplyAnswerModule()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –µ–≥–æ –≤ Hikka
hikka.register_module(reply_answer_module)
